introduccion
python
x
introduccion
programacion
semestre,
lenguaj
programacion
python
python:
lenguaj
alto
nivel
→
utiliz
aprend
program
brev
historia:
●
holanda,
guid
rossum
cre
lenguaj
programacion
●
cre
python
softwar
foundation
psf
promov
proteccion
libert
avanc
lenguaj
programacion
cc
sa
doc
searls
wikipedi
caracterist
exist
much
implement
cpython,
jython,
pypy
multiplataforma:
nix,
macos,
symbi
noki
,
pocket
pc,
ipod,
palm,
windows,
andro
multiparadigma:
orient
objetos,
imperativo,
funcional
●
python
objet
orientacion
objet
concept
trabaj
adel
curso,
import
conscient
tod
represent
element
usad
lenguaj
objet
caracterist
much
bibliotec
dispon
usad
●
programacion
interfac
graficas,
aplic
client
servidor,
visor
html,
bas
dat
●
mayor
cantid
recurs
reutiliz
version
lenguaj
scripting
maner
natural
transferent
dat
aplic
sistem
oper
ambient
programacion
ejecucion
●
idle
integrat
development
environment
,
…
●
geany
editor
gener
●
interfac
graficas:
pygame,
tkinter,
qt,
●
interpret
comand
consol
ejecucion
expresion
ejecut
shell,
correct
devuelv
result
contrari
mensaj
error
●
terminal:
python
●
idle:
idle
error
sintaxis
●
expresion
mal
form
●
identacion
inesper
error
semant
defin
division
cer
identif
identificadores:
usad
variabl
nombr
funcion
●
tant
caracter
dese
letras,
numer
“guion
”
[
]
●
“nombre”/
inici
numer
●
“cas
sensitive”
sensibl
mayuscul
minuscul
●
aguacat
●
aguacat
●
aguacat
→
buen
practica:
identif
signific
●
facilit
legibil
manten
softwar
escrit
identif
palabr
reserv
keywords
●
utiliz
identif
ordinari
variabl
represent
simbol
dat
program
funcion
variabl
termin
implementacion
semant
sintaxis
asignacion
valores:
variabl
expresion
variabl
asoci
“tip
dato”
python
dinam
tip
dat
●
numer
●
secuenci
●
conjunt
●
diccionari
●
enter
–
enter
int
–
bool
bool
tru
fals
●
real
float
●
complej
complex
tip
dat
●
numer
●
secuenci
●
conjunt
●
diccionari
conjunt
dat
indexados,
comienz
cer
n
,
n
secuenci
●
mutables:
●
list
list
,
arregl
array
,
arregl
bytes
bytearray
●
inmutables:
modific
●
string
str
,
tupl
tupl
,
bytes
bytes
tip
dat
●
numer
●
secuenci
●
conjunt
●
diccionari
represent
conjunt
finit
objetos,
unic
orden
●
mutabl
set
●
inmutables:
froz
sets
frozenset
tip
dat
●
nativos:
●
numer
●
secuenci
●
conjunt
●
diccionari
●
maner
manej
estructur
dat
indic
key
valu
expresion
oper
aritmet
conten
variables,
literales,
constant
oper
evalu
retorn
algun
result
aritmet
subtip
cual
oper
numer
oper
aritmet
operacion
descripcion
ejempl
 
 b
sum
 – b
rest
 
 b
product
 / b 
division
/
/
 // b
division
enter
//
 
 b
residu
division
enter
­
negat
posit
 
 b
potenci
division
enter
negat
python:
//
b
c
b
negat
cas
c
numer
enter
python
redond
result
numer
enter
menor
proxim
c
●
matematica:
/
,,
python:
//
result
division
enter
segun
python
pues
numer
enter
menor
cercan
result
ver
punt
roj
●
matematica:
/
,
,
python:
//
ver
punt
naranj
●
matematica:
/
,
,
python:
//
ver
punt
verd
mayores…
…
menor
precedent
oper
mayor
precedent
evalu
primer
algun
oper
mayor
precedent
evalu
izquierd
derech
parentesis
funcion
establec
precedent
forz
ejercicio:
resuelv
●
>>>
–
●
>>>
●
>>>
●
>>>
expresion
parentesis
potenci
x
x
negativo,
posit
/
//
multiplicacion,
division,
residu
suma,
rest
figur
derecha,
precedent
abaj
conversion
explicit
tip
●
normal
tip
expresion
aritmet
dad
tip
oper
●
obten
result
tip
particul
utiliz
constructor
p
:
int
,
float
,
complex
/
da
result
numer
real:
quier
enter
necesari
conversion
explicit
tip
conversion
explicit
tip
consideraciones:
●
truncamiento:
●
numer
flotantes:
●
numb
'nan'
●
infinity
'inf'
expresion
logic
●
oper
form
expresion
logic
boolean
operacion
descripcion
b
falso,
retorn
b,
sin
retorn
b
falso,
retorn
,
sin
retorn
b
falso,
retorn
true,
sin
retorn
fals
●
valor
falsos:
●
non
nonetyp
●
fals
bool
●
cer
tip
numer
int,
float,
…
●
secuenci
vacias:
'
',
,
[]
str,
tuple,
list
tabl
logic
boolean
b
b
b
tru
tru
tru
tru
fals
tru
fals
fals
tru
fals
fals
tru
fals
tru
tru
fals
fals
fals
fals
tru
expresion
oper
relacional
●
permit
realiz
compar
expresion
oper
mism
priorid
operacion
descripcion
ejempl
<
<
menor
menor
igual
>>>  < 
>>> tru
>
>
mayor
mayor
igual
>>>  <
 
>>> tru
igual
>>> 
 
 
>>> tru
>>>  
 ''
>>> 
diferent
>>> 'jaime' 
 'jaime'
>>> tru
–
ident
objet
negacion
mism
objet
>>> x 
 'j'  | >>> y 
 'j'
>>>
x
>>> fals
–
pertenent
negacion
>>>
x
jaime'
>>>
''
x
>>>tru
asignacion
oper
oper
aritmet
simpl
binarias:
oper
combin
asignacion
variabl
variable operadorbinari
 
variable 
 
variable ­
●
asign
equivalent
funcional
:
x 
 x 
 
x 
 
diferent
recomend
element
predefinidos:
funcion
codig
realiz
tare
acuerd
argument
brind
da
sal
part
entrad
disponibles:
http://docs
python
org//library/functions
html
file:///usr/share/doc/python
doc/html/library/functions
html
python
doc
element
predefinidos:
funcion
sintaxis
>>> nombr
funcion 
arg, arg, …, argn 
respuest
:
●
nombr
funcion:
correspond
identif
val
●
respuest
sal
esper
funcion
funcion
metod
retorn
ejempl
abs
arg
absolut
arg
>>>abs
divmod
,
b
par
//
b,
b
>>>
divmod
,
,
pow
,
b
elev
potenci
b
>>>
pow
,
round
,
[,
n]
redond
n
digit
decimales,
n
omit
asum
cer
aplic
float
int
>>>
round
,
,
element
predefinidos:
metod
defin
tar
especificas,
relacion
concept
clas
orientacion
objet
metod
“funcion
especif
clases”
●
deb
import
clas
metod
●
clas
math:
http://docs
python
org//library/math
html
file:///usr/share/doc/python
doc/html/library/math
html
python
doc
element
predefinidos:
metod
sintaxis
>>> clas
metodo 
arg, arg, …, argn 
respuest
:
●
clas
metodo:
correspond
identif
val
●
respuest
sal
esper
metod
metod
retorn
ejempl
import
math
math
floor
arg
menor
enter
>
arg
>>>math
floor
math
ceil
arg
mayor
entero,
<
arg
>>>math
ceil
math
sqrt
arg
raiz
cuadr
arg
>>>math
sqrt
math
log
,
[,
base]
logaritm
bas
dad
bas
asum
logaritm
natural
>>>
math
log
,
importacion
libreri
libreria:
conjunt
codig
funcion
datos,
utiliz
program
independient
deb
import
utiliz
ejempl
:
obten
result
√
raiz
cuadr
:
>>> modul
mate 
 
import
'math'
>>> modul
mat
sqrt
>>> import math
>>> math
sqrt
>>> import math  m
>>> m
sqrt
>>>  math import sqrt  raiz
>>> raiz
>>>  math import sqrt
>>> sqrt
>>>  math import 
>>> sqrt
>>> 
ayud
>>>
help
welcom
python
onlin
help
utility
first
tim
using
python,
definitely
check
tutorial
internet
http://docs
python
org/
/tutorial/
enter
nam
module,
keyword,
topic
get
help
writing
python
programs
using
python
modul
quit
help
utility
return
interpreter,
just
type
"quit"
get
list
avail
modules,
keywords,
topics,
type
"modules",
"keywords",
"topics"
modul
also
com
one
lin
summary
;
list
modul
whos
summari
contain
giv
word
"spam",
type
"modul
spam"
zen
python
>>>
import
→
zen
python:
otros
huev
pascu
apt
get
moo
oo
/
\/
/
|
||
/\
/\
"
moo
today
"
bell
mejor
feo
explicit
mejor
implicit
simpl
mejor
complej
complej
mejor
complic
plan
mejor
anid
ral
mejor
dens
legibil
cuent
cas
especial
tan
especial
quebrant
regl
aunqu
practic
gan
purez
error
nunc
deberi
dej
pas
silenci
men
silenci
explicit
frent
ambiguedad,
rechaz
tentacion
adivin
deberi
prefer
maner
obvi
hac
aunqu
maner
obvi
principi
men
usted
holand
ahor
mejor
nunc
aunqu
nunc
vec
mejor
implementacion
dificil
explicar,
mal
ide
implementacion
facil
explicar,
buen
ide
espaci
nombr
namespac
gran
ide
hag
cos
referent
lectur
complementari
●
material
suministr
profesor
jeff
schmidt,
institut
tecnolog
cost
ric
semestr
●
identif
palabr
reservadas:
http://docs
python
org/release/
/reference/lexical
analysis
html
identifiers
●
objetos,
valor
tipos:
http://docs
python
org/release/
/reference/datamodel
html
objects
valu
types
●
precedent
operadores:
http://docs
python
org/release/
/reference/expressions
html
summary
●
general:
http://docs
python
org//
http://creativecommons
org/licenses/
sa/
/cr/
licenci
presentacion
cubr
imagen
utiliz
introduccion
python
x
introduccion
programacion
semestre,
lenguaj
programacion
python
python:
lenguaj
alto
nivel
→
utiliz
aprend
program
brev
historia:
●
holanda,
guid
rossum
cre
lenguaj
programacion
●
cre
python
softwar
foundation
psf
promov
proteccion
libert
avanc
lenguaj
programacion
cc
sa
doc
searls
wikipedi
caracterist
exist
much
implement
cpython,
jython,
pypy
multiplataforma:
nix,
macos,
symbi
noki
,
pocket
pc,
ipod,
palm,
windows,
andro
multiparadigma:
orient
objetos,
imperativo,
funcional
●
python
objet
orientacion
objet
concept
trabaj
adel
curso,
import
conscient
tod
represent
element
usad
lenguaj
objet
python:
escrit
c
jython:
escrit
jav
pypy:
escrit
python
caracterist
much
bibliotec
dispon
usad
●
programacion
interfac
graficas,
aplic
client
servidor,
visor
html,
bas
dat
●
mayor
cantid
recurs
reutiliz
version
lenguaj
scripting
maner
natural
transferent
dat
aplic
sistem
oper
ambient
programacion
ejecucion
●
idle
integrat
development
environment
,
…
●
geany
editor
gener
●
interfac
graficas:
pygame,
tkinter,
qt,
●
interpret
comand
consol
siti
web
ninj
ide:
http://ninj
ide
org/
ejecucion
expresion
ejecut
shell,
correct
devuelv
result
contrari
mensaj
error
●
terminal:
python
●
idle:
idle
error
sintaxis
●
expresion
mal
form
●
identacion
inesper
error
semant
defin
division
cer
python
entend
program
softwar
ejecut
expresion
val
mism
lenguaj
programacion
shell:
python
idle
ejecut
direct
invoc
program
python
archiv
python
parametr
python
archiv
py
identif
identificadores:
usad
variabl
nombr
funcion
●
tant
caracter
dese
letras,
numer
“guion
”
[
]
●
“nombre”/
inici
numer
●
“cas
sensitive”
sensibl
mayuscul
minuscul
●
aguacat
●
aguacat
●
aguacat
→
buen
practica:
identif
signific
●
facilit
legibil
manten
softwar
escrit
enfasis
ejempl
ejercici
calcul
are
circulo,
identificadores:
radi
variabl
pi
contant
are
circul
funcion
ejemplos:
>>>
aguacat
"viv
liga"
>>>
aguacat
'viv
liga'
>>>
aguacat
"viv
carmen"
>>>
aguacat
'viv
carmen'
>>>
aguacat
aguacat
fals
>>>
aguacat
aguacat
tru
identif
significativos:
ejercici
circulo:
→
vez
“radio”
deci
“”,
funcion
lueg
entiend
record
matemat
colegi
variabl
extra:
funciones:
calcul
are
circul
pi
r
def
are
circul
radi
:
are
radi
return
are
identif
palabr
reserv
keywords
●
utiliz
identif
ordinari
irem
conoc
variabl
represent
simbol
dat
program
funcion
variabl
termin
implementacion
semant
sintaxis
asignacion
valores:
variabl
expresion
variabl
asoci
“tip
dato”
python
dinam
reforz
diferent
dat
instrucciones/codig
implementacion:
variabl
espaci
memoria,
utiliz
almacen
semanticamente:
cambi
borr
anterior
>>>
nombr
“jaim
gutierrez”
>>>
type
nombr
<type
'str'>
>>>
numer
[,
,
,
,
]
>>>
numer
[,
,
,
,
]
cualqu
ejemplos,
identif
qued
defin
ambient
ejecucion
utiliz
expresion
funcion
tip
dat
●
numer
●
secuenci
●
conjunt
●
diccionari
●
enter
–
enter
int
–
bool
bool
tru
fals
●
real
float
●
complej
complex
numer
enter
funcion
represent
numer
natural
enter
flotant
real
tip
dat
●
numer
●
secuenci
●
conjunt
●
diccionari
conjunt
dat
indexados,
comienz
cer
n
,
n
secuenci
●
mutables:
●
list
list
,
arregl
array
,
arregl
bytes
bytearray
●
inmutables:
modific
●
string
str
,
tupl
tupl
,
bytes
bytes
tip
dat
●
numer
●
secuenci
●
conjunt
●
diccionari
represent
conjunt
finit
objetos,
unic
orden
●
mutabl
set
●
inmutables:
froz
sets
frozenset
tip
dat
●
nativos:
●
numer
●
secuenci
●
conjunt
●
diccionari
●
maner
manej
estructur
dat
indic
key
valu
expresion
oper
aritmet
conten
variables,
literales,
constant
oper
evalu
retorn
algun
result
aritmet
subtip
cual
oper
numer
oper
aritmet
operacion
descripcion
ejempl
 
 b
sum
 – b
rest
 
 b
product
 / b 
division
/
/
 // b
division
enter
//
 
 b
residu
division
enter
­
negat
posit
 
 b
potenci
division
enter
negat
python:
//
b
c
b
negat
cas
c
numer
enter
python
redond
result
numer
enter
menor
proxim
c
●
matematica:
/
,,
python:
//
result
division
enter
segun
python
pues
numer
enter
menor
cercan
result
ver
punt
roj
●
matematica:
/
,
,
python:
//
ver
punt
naranj
●
matematica:
/
,
,
python:
//
ver
punt
verd
mayores…
…
menor
punt
roj
correspond
ver
enter
cercan
,
menor
punt
naranj
correspond
ver
enter
cercan
,
menor
punt
verd
correspond
ver
enter
cercan
,
menor
precedent
oper
mayor
precedent
evalu
primer
algun
oper
mayor
precedent
evalu
izquierd
derech
parentesis
funcion
establec
precedent
forz
ejercicio:
resuelv
●
>>>
–
●
>>>
●
>>>
●
>>>
expresion
parentesis
potenci
x
x
negativo,
posit
/
//
multiplicacion,
division,
residu
suma,
rest
figur
derecha,
precedent
abaj
>>>
–
→
mism
precedencia,
evalu
izquierd
derech
>>>
→
precedent
oper
multiplicacion
,
sum
rest
●
>>>
→
parentesis
oblig
evalu
distint
●
>>>
>>>
●
●
→
conversion
explicit
tip
●
normal
tip
expresion
aritmet
dad
tip
oper
●
obten
result
tip
particul
utiliz
constructor
p
:
int
,
float
,
complex
/
da
result
numer
real:
quier
enter
necesari
conversion
explicit
tip
conversion
explicit
tip
consideraciones:
●
truncamiento:
●
numer
flotantes:
●
numb
'nan'
●
infinity
'inf'
operadores:
num
num
tip
float
ojo
decimal
quier
result
“truncado”
pas
int
conversion
explicit
tip
casting
,
llam
promocion
tip
expresion
logic
●
oper
form
expresion
logic
boolean
operacion
descripcion
b
falso,
retorn
b,
sin
retorn
b
falso,
retorn
,
sin
retorn
b
falso,
retorn
true,
sin
retorn
fals
●
valor
falsos:
●
non
nonetyp
●
fals
bool
●
cer
tip
numer
int,
float,
…
●
secuenci
vacias:
'
',
,
[]
str,
tuple,
list
tabl
logic
boolean
b
b
b
tru
tru
tru
tru
fals
tru
fals
fals
tru
fals
fals
tru
fals
tru
tru
fals
fals
fals
fals
tru
oper
retorn
operand
expresion
oper
relacional
●
permit
realiz
compar
expresion
oper
mism
priorid
operacion
descripcion
ejempl
<
<
menor
menor
igual
>>>  < 
>>> tru
>
>
mayor
mayor
igual
>>>  <
 
>>> tru
igual
>>> 
 
 
>>> tru
>>>  
 ''
>>> 
diferent
>>> 'jaime' 
 'jaime'
>>> tru
–
ident
objet
negacion
mism
objet
>>> x 
 'j'  | >>> y 
 'j'
>>>
x
>>> fals
–
pertenent
negacion
>>>
x
jaime'
>>>
''
x
>>>tru
asignacion
oper
oper
aritmet
simpl
binarias:
oper
combin
asignacion
variabl
variable operadorbinari
 
variable 
 
variable ­
●
asign
equivalent
funcional
:
x 
 x 
 
x 
 
diferent
recomend
diferent
sintactica,
pues
semant
mism
recomiend
mejor
utiliz
form
explicit
legibl
element
predefinidos:
funcion
codig
realiz
tare
acuerd
argument
brind
da
sal
part
entrad
disponibles:
http://docs
python
org//library/functions
html
file:///usr/share/doc/python
doc/html/library/functions
html
python
doc
element
predefin
principal
son:
funcion
metod
sugerent
instal
paquete:
python
doc
documentacion
python
comput
siguient
diapo:
abs,
divmod,
pow,
round
help
mostr
detall
sintaxis:
argument
opcional
denot
[]
argument
obligatori
revis
aca
deten
sitaxis
:
print
>>>
print
"hola"
hol
>>>
print
"hola","mundo"
hol
mund
>>>
print
"hola","mundo",
sep
"
"
hol
mund
>>>
print
"hola","mundo",
sep
"
",
end
"\t"
hol
mund
>>>
input
>>>
entrad
input
"
equip
mejor
"
equip
mejor
lig
lig
>>>
entrad
'lig
liga'
>>>
entrad
input
"
equip
mejor
\n"
equip
mejor
lig
lig
>>>
entrad
'lig
liga'
element
predefinidos:
funcion
sintaxis
>>> nombr
funcion 
arg, arg, …, argn 
respuest
:
●
nombr
funcion:
correspond
identif
val
●
respuest
sal
esper
funcion
funcion
metod
retorn
ejempl
abs
arg
absolut
arg
>>>abs
divmod
,
b
par
//
b,
b
>>>
divmod
,
,
pow
,
b
elev
potenci
b
>>>
pow
,
round
,
[,
n]
redond
n
digit
decimales,
n
omit
asum
cer
aplic
float
int
>>>
round
,
,
funciones:
concept
funcion
lenguaj
programacion
asoci
codig
realiz
tare
especif
acuerd
argument
brind
busc
funcion
ejempl
anterior
element
predefinidos:
metod
defin
tar
especificas,
relacion
concept
clas
orientacion
objet
metod
“funcion
especif
clases”
●
deb
import
clas
metod
●
clas
math:
http://docs
python
org//library/math
html
file:///usr/share/doc/python
doc/html/library/math
html
python
doc
metodos:
sirv
defin
tar
especificas,
relacion
concept
clas
desarroll
detall
capitul
,
"programacion
orient
objetos"
constructor
vim
convert
numer
entero,
ejempl
funcion
importar:
program
ejecutandose,
carg
memori
“
codigo”
corespondient
interpret
comand
pon
vec
disen
modul
carg
ahorr
memoria,
import
modul
memori
codig
“”
interpret
nuev
comand
enfoqu
denot
eficient
recurs
r/
,
recurs
ocup
men
memori
busc
cos
men
espaci
memoria,
mś
rap
metafora:
pong
cos
pupitre,
apunt
mochill
ocup
saquel
mochil
pongal
pupitr
element
predefinidos:
metod
sintaxis
>>> clas
metodo 
arg, arg, …, argn 
respuest
:
●
clas
metodo:
correspond
identif
val
●
respuest
sal
esper
metod
metod
retorn
ejempl
import
math
math
floor
arg
menor
enter
>
arg
>>>math
floor
math
ceil
arg
mayor
entero,
<
arg
>>>math
ceil
math
sqrt
arg
raiz
cuadr
arg
>>>math
sqrt
math
log
,
[,
base]
logaritm
bas
dad
bas
asum
logaritm
natural
>>>
math
log
,
>>>
math
sqrt
traceback
recent
call
last
:
fil
"<stdin>",
lin
,
<module>
valueerror:
math
domain
error
solucion:
dad
funcion
defin
enter
>>>
math
log
,
importacion
libreri
libreria:
conjunt
codig
funcion
datos,
utiliz
program
independient
deb
import
utiliz
ejempl
:
obten
result
√
raiz
cuadr
:
>>> modul
mate 
 
import
'math'
>>> modul
mat
sqrt
>>> import math
>>> math
sqrt
>>> import math  m
>>> m
sqrt
>>>  math import sqrt  raiz
>>> raiz
>>>  math import sqrt
>>> sqrt
>>>  math import 
>>> sqrt
>>> 
forma:
>>>
modul
mat
import
'math'
>>>
modul
mat
sqrt
util
prueb
unitarias,
ejempl
nombr
archiv
numer
carn
ayud
>>>
help
welcom
python
onlin
help
utility
first
tim
using
python,
definitely
check
tutorial
internet
http://docs
python
org/
/tutorial/
enter
nam
module,
keyword,
topic
get
help
writing
python
programs
using
python
modul
quit
help
utility
return
interpreter,
just
type
"quit"
get
list
avail
modules,
keywords,
topics,
type
"modules",
"keywords",
"topics"
modul
also
com
one
lin
summary
;
list
modul
whos
summari
contain
giv
word
"spam",
type
"modul
spam"
>>>
help
abs
>>>
zen
python
>>>
import
→
zen
python:
otros
huev
pascu
apt
get
moo
oo
/
\/
/
|
||
/\
/\
"
moo
today
"
bell
mejor
feo
explicit
mejor
implicit
simpl
mejor
complej
complej
mejor
complic
plan
mejor
anid
ral
mejor
dens
legibil
cuent
cas
especial
tan
especial
quebrant
regl
aunqu
practic
gan
purez
error
nunc
deberi
dej
pas
silenci
men
silenci
explicit
frent
ambiguedad,
rechaz
tentacion
adivin
deberi
prefer
maner
obvi
hac
aunqu
maner
obvi
principi
men
usted
holand
ahor
mejor
nunc
aunqu
nunc
vec
mejor
implementacion
dificil
explicar,
mal
ide
implementacion
facil
explicar,
buen
ide
espaci
nombr
namespac
gran
ide
hag
cos
jam
jupiter:
apt
get
moo
oo
/
\/
/
|
||
/\
/\
"
moo
today
"
referent
lectur
complementari
●
material
suministr
profesor
jeff
schmidt,
institut
tecnolog
cost
ric
semestr
●
identif
palabr
reservadas:
http://docs
python
org/release/
/reference/lexical
analysis
html
identifiers
●
objetos,
valor
tipos:
http://docs
python
org/release/
/reference/datamodel
html
objects
valu
types
●
precedent
operadores:
http://docs
python
org/release/
/reference/expressions
html
summary
●
general:
http://docs
python
org//
http://creativecommons
org/licenses/
sa/
/cr/
licenci
presentacion
cubr
imagen
utiliz
