
primeros
pasos
python
introduccion
programacion
semestre,
escribir
programas
python
programador
debe
utilizar
expresiones,
funciones
y
metodos
de
forma
combinada
obtener
soluciones
problemas
programa
python:
●
archivo
extension
py
ejemplo:
circulo
py
●
archivo
c
o
c
compilados
●
modulo
cargado
dinamicamente
import
interprete
python
escribir
programas
python
/usr/bin/python
archivo:
area
circulo
py
calcular
area
de
circulo
pi
r
radio
area
radio
print
area
…
y
despues
quiero
volver
calcular
area
de
circulo
definicion
de
funcion
mejor
forma
escribir
programas
medio
de
funciones
def
nombre
funcion
argumentos
:
cuerpo
de
funcion
def:
palabra
reservada
de
python
nombre
de
funcion
identificador
valido
de
python
nombre
significativo
argumentos
son
entradas
que
recibe
programa
se
presentan
nombres
simbolicos
o
identificadores
internos
que
seran
sustituidos
cuerpo
de
funcion:
logica
de
solucion
expresiones,
combinaciones
de
estructuras
permitidas,
contener
invocaciones
otras
funciones
notas
de
sintaxis:
puntos
:
e
identacion
…
y
salidas
y
restricciones
invocar
funciones
funciones
ejecutarse
directamente
interprete
o
programa
sintaxis
ejecucion
interprete:
>>>
nombre
funcion
valores
argumentos
resultado
hubiera
argumentos
son
valores
de
entrada
que
seran
asociados
nombres
simbolicos
identificadores
internos
que
definimos
invocacion
de
funciones
de
programa
se
realiza
igual,
resultado
se
presentara
interprete
sino
que
estara
disposicion
de
“”
invoco
funcion
escribir
programas
python
nivel
/usr/bin/python
archivo:
area
circulo
v
py
calcular
area
de
circulo
pi
r
def
area
circulo
radio
:
area
radio
return
area
resultado
area
circulo
print
resultado
escribir
programas
python
v
/usr/bin/python
archivo:
area
circulo
v
py
calcular
area
de
circulo
pi
r
def
area
circulo
radio
:
area
radio
return
area
resultado
area
circulo
print
resultado
variable
local
unicamente
conocida
del
ambito
de
funcion
definida
fuera
de
funcion
“area”
existe
documentacion
interna
del
codigo
python
formas
de
escribir
comentarios
codigo
fuente:
●
de
linea:
se
utiliza
simbolo
●
multilinea:
se
definen
tres
comillas
dobles
/usr/bin/python
archivo:
area
circulo
v
py
funcion
que
calcula
area
de
circulo
entradas:
radio
salidas:
area
del
circulo
restricciones:
radio
debe
mayor
que
cero
def
area
circulo
radio
:
area
radio
formula:
pi
r
return
area
documentacion
interna
del
codigo
python
formas
de
escribir
comentarios
codigo
fuente:
●
de
linea:
se
utiliza
simbolo
●
multilinea:
se
definen
tres
comillas
docstrings
/usr/bin/python
'''
funcion
que
calcula
area
de
circulo
entradas:
radio
salidas:
area
del
circulo
restricciones:
radio
debe
mayor
que
cero
'''
def
area
circulo
radio
:
documentacion
interna
del
codigo
print
doc
/usr/bin/python
def
area
circulo
radio
:
'''
funcion
que
calcula
area
de
circulo
entradas:
radio
salidas:
area
del
circulo
restricciones:
radio
debe
mayor
que
cero
'''
return
radio
formula:
pi
r
>>>
print
area
circulo
doc
ejercicio:
area
y
perimetro
de
rectangulo
escriba
programa
de
python
que
contenga
funciones
operar
rectangulos:
●
area
base
altura
●
perimetro
base
base
altura
altura
→
utilice
return
retornar
resultante
de
operaciones
→
asegurese
de
pruebas
de
programa
disene
plan
de
pruebas
entender
problema
pensar
algoritmo
codigo
pruebas
comentariosdiagrama
de
flujoentradas
salidas
restricciones
errores
pulgas
o
bugs
tres
tipos
de
errores:
●
sintacticos:
se
da
incumplimiento
de
reglas
definidas
lenguaje
●
semanticos:
se
dan
de
ejecucion
y
representar
fallos
logica
del
programa
hay
resultados
son
esperados
●
excepciones:
de
ejecucion,
son
errores
que
se
presentan
“capturados”
que
programa
pueda
continuar
funcionamiento
son
tecnica
mas
avanzada
de
programacion
ejercicio:
conversion
de
grados
escriba
funciones,
documentas,
convertir
grados
centigrados
farenheit
formulas:
●
farenheit
/
centigrados
●
centigrados:
farenheit
–
/
,
mas
practica:
●
construya
funcion
de
conversiones
que
aparecen
tabla:
http://
wikipedia
org/wiki/grado
fahrenheit
conversi
c
bn
otras
unidades
estructuras
de
control
se
hay
restricciones
que
validar
…
flujos
alternos
…
acciones
repetitivas
estructuras
de
control
●
de
decision
●
repetitivas
jeff
schmidt
peralta
estructuras
de
decision
python
provee
estructura
decision
dada
evaluacion
de
condicion,
que
tendra
posibles
estados:
true
o
falso
false
estructuras
de
decision
estructura
:
●
logica
que
de
condiciones
sea
verdadera
otras
palabras
que
bloque
de
codigo
sea
ejecutado
restricciones:
base
y
alturas
mayores
que
cero
def
area
rectangulo
base,altura
:
base
>
altura
>
:
area
base
altura
return
area
else:
return
"error
entradas"
estructuras
de
decision
●
estructuras
dependientes
/
independientes
●
dependientes
veces
son
llamadas
anidadas
●
punto:
independientes
deben
mutuamente
excluyentes
dependiente
condicion
:
cuerpo
elif
condicion
:
cuerpo
else:
cuerpo
independiente
condicion
:
cuerpo
condicion
:
cuerpo
condicion
:
cuerpo
ei
ingeniero
mas
eficiente
bad
boss
cc
nc
sa
erickherbert
flickr
ejercicio:
conversion
de
grados
escriba
funciones,
documentas,
convertir
grados
centigrados
farenheit
haga
menu
seleccionar
funcion
desea
utilizar
usuario
utilice
●
ingrese
convertir
centigrados
farenheit
●
ingrese
convertir
farenheit
centigrados
formulas:
●
farenheit
/
centigrados
●
centigrados:
farenheit
–
/
,
mas
practica:
●
construya
funcion
de
conversiones
que
aparecen
tabla
y
agreguelas
al
menu:
http://
wikipedia
org/wiki/grado
fahrenheit
conversi
c
bn
otras
unidades
estructuras
de
repeticion
problemas
son
“pequenos”
posible
escribir
codigo
evaluar
parametro
embargo
complejidad
crece
se
necesario
contar
elementos
que
permitan
repetir
procesos
repeticion
programacion
usualmente
asociada
recursividad
e
iteracion
python
se
dispone
de
estructuras
iteracion:
●
●
expresion:
bloque
[else:
bloque]
iterador
iterable:
bloque
[else:
bloque]
estructuras
de
repeticion:
condicion
se
cumpla
se
llevara
cabo
accion
estas
instrucciones
se
mapear
de
expresiones
cotidianas
espanol
de
forma:
“”
mama:
“mi
hijito
pulperia
y
espere
llega
panadero
pan
recien
horneado”
repeticion
este
ejemplo
de
vida
cotidiana
responsabilidad
del
programador
asegurarse
que
programa
“salga”
del
ciclo
sucede
eso
ejemplo
import
time
import
random
def
pan
:
print
'
comprar
pan
fresco'
panadero
:
time
sleep
print
'
esperando
'
print
'ya
casa
pan
fresco'
def
panadero
:
num
random
randint
,
print
'\t\t
numero:',num
num
:
return
true
else:
return
false
estructuras
de
repeticion:
hasta
que
condicion
se
cumpla
se
llevara
cabo
accion
estas
instrucciones
se
mapear
de
expresiones
cotidianas
espanol
de
forma:
“hasta”
mama:
“mi
hijito
pulperia
y
espere
hasta
minutos
ver
llega
panadero
pan
recien
horneado,
sino
se
viene”
repeticion
este
ejemplo
de
vida
cotidiana
note:
tanto
recursion
son
equivalentes
y
practicamente
iguales
detalles
que
cambian
son
principalmente
sintacticos
import
time
import
random
def
pan
hasta
espera
:
print
'
comprar
pan
fresco'
compre
pan
false
espera
range
,espera
:
panadero
:
compre
pan
true
print
'compre
pan
fresco
:
'
break
else:
print
'
panadero'
print
'
esperando
'
time
sleep
compre
pan
false:
print
'
pude
comprar
pan
:
'
estilos
de
codificacion
python
existen
pep
python
enhancement
proposal
[pep
]
●
identacion:
espacios
blanco,
tabulacion
●
lineas
de
codigo
menos
menos
caracteres
●
espacios
blanco
lineas
:
separar
funciones
y
separar
bloques
grandes
de
codigo
●
funciones:
nombre
de
funcion
●
nombres
de
clase:
nombreclase
oo
recomendacion:
buscar
pep
y
darle
vistazo
tareas
programadas
http://www
python
org/dev/peps/pep
/
manejo
de
argumentos
general
existen
tipos:
:
●
se
pasa
copia
del
●
otra
direccion
de
memoria
●
original
permanece
intacto
referencia:
●
se
pasa
original
●
misma
direccion
de
memoria
●
funcion
modifica
,
original
tambien
se
modificar
manejo
de
argumentos
python
hay
de
opciones
●
objetos
inmutables
str,
tuplas
de
funcion,
se
crea
nueva
instancia
del
objeto,
original
cambiada
●
objetos
mutables
listas,
diccionarios
:
cambio
de
funcion
“afecta”
al
objeto
original
→
objetos
inmutables
se
“pasan”
y
objetos
mutables
referencia
mas
informacion
funciones:
●
http://docs
python
org/release/
/tutorial/controlflow
html
defining
functions
errores:
●
http://docs
python
org/release/
/tutorial/errors
html
estructuras
de
control:
●
:
http://docs
python
org/release/
/tutorial/controlflow
html
statements
●
:
http://docs
python
org/release/
/tutorial/controlflow
html
pep
:
http://www
python
org/dev/peps/pep
/
ejercicios
numeros
estructuras
de
decision
escriba
funcion
que
reciba
numero
y
retorne
numero
de
digitos
de
este
utilice
//
y
restriccion:
numero
entrada
mas
de
digitos
●
num
digitos
entrada
→
salida
●
num
digitos
→
●
num
digitos
→
escriba
programa
'componer'
numeros
partir
de
entradas
recibira
tres
parametros
y
devolvera
composicion
utilice
y
●
forma
num
digito,digito,digito
→
salida
●
forma
num
,,
→
●
forma
num
escriba
funcion
que
reciba
numero
de
digitos
y
retorne
sumados
utilizar
funcion
num
digitos
validar
●
suma
digitos
numero
→
salida
●
suma
digitos
→
●
suma
digitos
→
“error”
referencias
y
lecturas
complementarias
●
material
suministrado
profesor
jeff
schmidt,
instituto
tecnologico
de
costa
rica
semestre
http://creativecommons
org/licenses/
sa/
/cr/
licencia
de
presentacion
cubre
imagenes
utilizadas
primeros
pasos
python
introduccion
programacion
semestre,
escribir
programas
python
programador
debe
utilizar
expresiones,
funciones
y
metodos
de
forma
combinada
obtener
soluciones
problemas
programa
python:
●
archivo
extension
py
ejemplo:
circulo
py
●
archivo
c
o
c
compilados
●
modulo
cargado
dinamicamente
import
interprete
python
expresiones:
combinaciones
de
operadores,
metodos,
funciones,
datos
formular
del
area:
pi
r
conocimientos
adquiridos
hasta
ahora:
escribir
programa
de
python
que
permita
calcular
area
de
circulo
escribir
programas
python
/usr/bin/python
archivo:
area
circulo
py
calcular
area
de
circulo
pi
r
radio
area
radio
print
area
…
y
despues
quiero
volver
calcular
area
de
circulo
ojo:
este
ejemplo
de
utilizar
funciones
aprovechar
explicar
que
forma
de
solucionar
problema,
poco
reutilizable
vez
que
quiero
utilizarla
necesito
cambiar
codificacion
del
programa
primera
linea
indicarle
al
sistema
operativo
python
debe
utilizar
de
que
utilizar
programa
script
que
ejecuta
directamente
s
o
chmod
z
x
nombre
programa
→
esto
hacerlo
ejecutable
/nombre
programa
→
ejecuto
definicion
de
funcion
mejor
forma
escribir
programas
medio
de
funciones
def
nombre
funcion
argumentos
:
cuerpo
de
funcion
def:
palabra
reservada
de
python
nombre
de
funcion
identificador
valido
de
python
nombre
significativo
argumentos
son
entradas
que
recibe
programa
se
presentan
nombres
simbolicos
o
identificadores
internos
que
seran
sustituidos
cuerpo
de
funcion:
logica
de
solucion
expresiones,
combinaciones
de
estructuras
permitidas,
contener
invocaciones
otras
funciones
notas
de
sintaxis:
puntos
:
e
identacion
…
y
salidas
y
restricciones
salidas
usualmente
son
dadas
return,
que
otra
parte
del
programa
pueda
utilizar
esos
valores
return
restricciones,
utilizamos
comentarios
indicarle
al
programados
de
estas
y
validaciones
que
programa
se
asegure
que
datos
de
entrada
cumplen
restricciones
argumentos
otros
lenguajes
se
les
conoce
parametros
ojo
argumentos:
python
permite
funciones
numero
de
argumentos
variable,
o
argumentos
omision
predeterminados
revisen
eso
ojo
que
python
se
define
tipo
de
que
se
retornara,
inclusive
que
programador
retorne
nada,
esos
casos
python
retorna
none
invocar
funciones
funciones
ejecutarse
directamente
interprete
o
programa
sintaxis
ejecucion
interprete:
>>>
nombre
funcion
valores
argumentos
resultado
hubiera
argumentos
son
valores
de
entrada
que
seran
asociados
nombres
simbolicos
identificadores
internos
que
definimos
invocacion
de
funciones
de
programa
se
realiza
igual,
resultado
se
presentara
interprete
sino
que
estara
disposicion
de
“”
invoco
funcion
escribir
programas
python
nivel
/usr/bin/python
archivo:
area
circulo
v
py
calcular
area
de
circulo
pi
r
def
area
circulo
radio
:
area
radio
return
area
resultado
area
circulo
print
resultado
de
funcion
incluye
unicamente
linea
que
comienza
def,
instanciacion
de
variable
y
return
demas
ejecutar
funcion
argumento
particular,
mismo
usando
shell
de
python
escribir
programas
python
v
/usr/bin/python
archivo:
area
circulo
v
py
calcular
area
de
circulo
pi
r
def
area
circulo
radio
:
area
radio
return
area
resultado
area
circulo
print
resultado
variable
local
unicamente
conocida
del
ambito
de
funcion
definida
fuera
de
funcion
“area”
existe
de
funcion
incluye
unicamente
linea
que
comienza
def,
instanciacion
de
variable
y
return
demas
ejecutar
funcion
argumento
particular,
mismo
usando
shell
de
python
explicar
concepto
de
variable
local,
aca
area
variable
local
que
unicamente
sera
valida
del
cuerpo
del
programa
documentacion
interna
del
codigo
python
formas
de
escribir
comentarios
codigo
fuente:
●
de
linea:
se
utiliza
simbolo
●
multilinea:
se
definen
tres
comillas
dobles
/usr/bin/python
archivo:
area
circulo
v
py
funcion
que
calcula
area
de
circulo
entradas:
radio
salidas:
area
del
circulo
restricciones:
radio
debe
mayor
que
cero
def
area
circulo
radio
:
area
radio
formula:
pi
r
return
area
primera
linea
del
comentario
indicarle
al
que
version
de
python
debe
utilizar
buena
practica
segunda
linea
identificar
nombre
del
archivo
–
se
agregar
fecha
y
nombre
del
autor
obligatoriamente
utilizaremos:
descripcion
se
omite
decirlo
explicito
entradas,
salidas,
restricciones
documentacion
interna
del
codigo
python
formas
de
escribir
comentarios
codigo
fuente:
●
de
linea:
se
utiliza
simbolo
●
multilinea:
se
definen
tres
comillas
docstrings
/usr/bin/python
'''
funcion
que
calcula
area
de
circulo
entradas:
radio
salidas:
area
del
circulo
restricciones:
radio
debe
mayor
que
cero
'''
def
area
circulo
radio
:
aca
hay
identacion
comentario
multliinea
se
asume
que
de
funcion
y
adentro
documentacion
interna
del
codigo
print
doc
/usr/bin/python
def
area
circulo
radio
:
'''
funcion
que
calcula
area
de
circulo
entradas:
radio
salidas:
area
del
circulo
restricciones:
radio
debe
mayor
que
cero
'''
return
radio
formula:
pi
r
>>>
print
area
circulo
doc
aca
hay
identacion
comentario
interno
de
funcion
sino
hay
error
se
programa
asi:
/usr/bin/python
filename:
area
circulo
py
'''
este
programa
tuanis
'''
>>>
print
doc
ejercicio:
area
y
perimetro
de
rectangulo
escriba
programa
de
python
que
contenga
funciones
operar
rectangulos:
●
area
base
altura
●
perimetro
base
base
altura
altura
→
utilice
return
retornar
resultante
de
operaciones
→
asegurese
de
pruebas
de
programa
disene
plan
de
pruebas
entender
problema
pensar
algoritmo
codigo
pruebas
comentariosdiagrama
de
flujoentradas
salidas
restricciones
funciones
input
y
print,
solicitar
parametros
y
imprimir
resultado
de
calculos
pantalla
solucion
python
necesitaria
algo
:
recibir
argumentos
validarlos
contra
restricciones
–
caso
de
error
indicarlo
generar
salidas
errores
pulgas
o
bugs
tres
tipos
de
errores:
●
sintacticos:
se
da
incumplimiento
de
reglas
definidas
lenguaje
●
semanticos:
se
dan
de
ejecucion
y
representar
fallos
logica
del
programa
hay
resultados
son
esperados
●
excepciones:
de
ejecucion,
son
errores
que
se
presentan
“capturados”
que
programa
pueda
continuar
funcionamiento
son
tecnica
mas
avanzada
de
programacion
herramientas
correccion
de
errores:
depurador
o
debugger
→
depurador
utilizado
presencia
de
errores,
tambien
queremos
mejorara
eficiencia
de
programa
●
depurador
se
utilizar
de
forma
grafica
o
utilizando
funciones
del
modulo
pdb
o
modulo
trace
ejercicio:
conversion
de
grados
escriba
funciones,
documentas,
convertir
grados
centigrados
farenheit
formulas:
●
farenheit
/
centigrados
●
centigrados:
farenheit
–
/
,
mas
practica:
●
construya
funcion
de
conversiones
que
aparecen
tabla:
http://
wikipedia
org/wiki/grado
fahrenheit
conversi
c
bn
otras
unidades
estructuras
de
control
se
hay
restricciones
que
validar
…
flujos
alternos
…
acciones
repetitivas
estructuras
de
control
●
de
decision
●
repetitivas
jeff
schmidt
peralta
estructuras
de
decision
python
provee
estructura
decision
dada
evaluacion
de
condicion,
que
tendra
posibles
estados:
true
o
falso
false
estructuras
de
decision
estructura
:
●
logica
que
de
condiciones
sea
verdadera
otras
palabras
que
bloque
de
codigo
sea
ejecutado
restricciones:
base
y
alturas
mayores
que
cero
def
area
rectangulo
base,altura
:
base
>
altura
>
:
area
base
altura
return
area
else:
return
"error
entradas"
ver
archivo
ejercicio
semana
py
estructuras
de
decision
●
estructuras
dependientes
/
independientes
●
dependientes
veces
son
llamadas
anidadas
●
punto:
independientes
deben
mutuamente
excluyentes
dependiente
condicion
:
cuerpo
elif
condicion
:
cuerpo
else:
cuerpo
independiente
condicion
:
cuerpo
condicion
:
cuerpo
condicion
:
cuerpo
ei
ingeniero
mas
eficiente
bad
boss
cc
nc
sa
erickherbert
flickr
dependientes
son
mas
eficientes
evitan
estar
haciendo
evaluaciones
que
innecesarias
ejercicio:
conversion
de
grados
escriba
funciones,
documentas,
convertir
grados
centigrados
farenheit
haga
menu
seleccionar
funcion
desea
utilizar
usuario
utilice
●
ingrese
convertir
centigrados
farenheit
●
ingrese
convertir
farenheit
centigrados
formulas:
●
farenheit
/
centigrados
●
centigrados:
farenheit
–
/
,
mas
practica:
●
construya
funcion
de
conversiones
que
aparecen
tabla
y
agreguelas
al
menu:
http://
wikipedia
org/wiki/grado
fahrenheit
conversi
c
bn
otras
unidades
estructuras
de
repeticion
problemas
son
“pequenos”
posible
escribir
codigo
evaluar
parametro
embargo
complejidad
crece
se
necesario
contar
elementos
que
permitan
repetir
procesos
repeticion
programacion
usualmente
asociada
recursividad
e
iteracion
python
se
dispone
de
estructuras
iteracion:
●
●
expresion:
bloque
[else:
bloque]
iterador
iterable:
bloque
[else:
bloque]
estructuras
de
repeticion:
condicion
se
cumpla
se
llevara
cabo
accion
estas
instrucciones
se
mapear
de
expresiones
cotidianas
espanol
de
forma:
“”
mama:
“mi
hijito
pulperia
y
espere
llega
panadero
pan
recien
horneado”
repeticion
este
ejemplo
de
vida
cotidiana
responsabilidad
del
programador
asegurarse
que
programa
“salga”
del
ciclo
sucede
eso
ejemplo
import
time
import
random
def
pan
:
print
'
comprar
pan
fresco'
panadero
:
time
sleep
print
'
esperando
'
print
'ya
casa
pan
fresco'
def
panadero
:
num
random
randint
,
print
'\t\t
numero:',num
num
:
return
true
else:
return
false
repeticion
espera
espera
se
sale
del
programa
:
panadero
→
esa
funcion
retorne
de
eso
sucede
este
ejemplo
azar
favorezca,
tecnica
programados
se
aseguro
de
que
se
saliera
del
ciclo
estructuras
de
repeticion:
hasta
que
condicion
se
cumpla
se
llevara
cabo
accion
estas
instrucciones
se
mapear
de
expresiones
cotidianas
espanol
de
forma:
“hasta”
mama:
“mi
hijito
pulperia
y
espere
hasta
minutos
ver
llega
panadero
pan
recien
horneado,
sino
se
viene”
repeticion
este
ejemplo
de
vida
cotidiana
note:
tanto
recursion
son
equivalentes
y
practicamente
iguales
detalles
que
cambian
son
principalmente
sintacticos
import
time
import
random
def
pan
hasta
espera
:
print
'
comprar
pan
fresco'
compre
pan
false
espera
range
,espera
:
panadero
:
compre
pan
true
print
'compre
pan
fresco
:
'
break
else:
print
'
panadero'
print
'
esperando
'
time
sleep
compre
pan
false:
print
'
pude
comprar
pan
:
'
repeticion
espera
y
pregunta
siempre
espera
y
pregunta
se
sale
del
programa
cantidad
de
intentos
esperar
se
haya
agotado
espera
o
ya
haya
llegado
panadero
estilos
de
codificacion
python
existen
pep
python
enhancement
proposal
[pep
]
●
identacion:
espacios
blanco,
tabulacion
●
lineas
de
codigo
menos
menos
caracteres
●
espacios
blanco
lineas
:
separar
funciones
y
separar
bloques
grandes
de
codigo
●
funciones:
nombre
de
funcion
●
nombres
de
clase:
nombreclase
oo
recomendacion:
buscar
pep
y
darle
vistazo
tareas
programadas
http://www
python
org/dev/peps/pep
/
manejo
de
argumentos
general
existen
tipos:
:
●
se
pasa
copia
del
●
otra
direccion
de
memoria
●
original
permanece
intacto
referencia:
●
se
pasa
original
●
misma
direccion
de
memoria
●
funcion
modifica
,
original
tambien
se
modificar
manejo
de
argumentos
python
hay
de
opciones
●
objetos
inmutables
str,
tuplas
de
funcion,
se
crea
nueva
instancia
del
objeto,
original
cambiada
●
objetos
mutables
listas,
diccionarios
:
cambio
de
funcion
“afecta”
al
objeto
original
→
objetos
inmutables
se
“pasan”
y
objetos
mutables
referencia
mas
informacion
funciones:
●
http://docs
python
org/release/
/tutorial/controlflow
html
defining
functions
errores:
●
http://docs
python
org/release/
/tutorial/errors
html
estructuras
de
control:
●
:
http://docs
python
org/release/
/tutorial/controlflow
html
statements
●
:
http://docs
python
org/release/
/tutorial/controlflow
html
pep
:
http://www
python
org/dev/peps/pep
/
ejercicios
numeros
estructuras
de
decision
escriba
funcion
que
reciba
numero
y
retorne
numero
de
digitos
de
este
utilice
//
y
restriccion:
numero
entrada
mas
de
digitos
●
num
digitos
entrada
→
salida
●
num
digitos
→
●
num
digitos
→
escriba
programa
'componer'
numeros
partir
de
entradas
recibira
tres
parametros
y
devolvera
composicion
utilice
y
●
forma
num
digito,digito,digito
→
salida
●
forma
num
,,
→
●
forma
num
escriba
funcion
que
reciba
numero
de
digitos
y
retorne
sumados
utilizar
funcion
num
digitos
validar
●
suma
digitos
numero
→
salida
●
suma
digitos
→
●
suma
digitos
→
“error”
referencias
y
lecturas
complementarias
●
material
suministrado
profesor
jeff
schmidt,
instituto
tecnologico
de
costa
rica
semestre
http://creativecommons
org/licenses/
sa/
/cr/
licencia
de
presentacion
cubre
imagenes
utilizadas
